import csv
import numpy as np

names = {}
retweet_names = {}
clean_names = {}

tweet_id = "1116612649972719617"
#tweet_id = "1117354119650598912"


with open(f"clean_network_{tweet_id}_F.txt", 'r') as net:
    for line in net.readlines():
        line = line.strip()
        line = line.split(",")

        if (line[0] in clean_names):
            clean_names[line[0]].append(line[1])
        else:
            clean_names[line[0]] = [line[1]]

        # make empty entry for all nodes that have positive in_degree but zero out_degree
        if (line[1] not in clean_names):
            clean_names[line[1]] = []
    
    print("len clean names", len(clean_names.keys()))

nbr = []
adj = []


with open(f"retweets_{tweet_id}.txt", 'r') as file:
    for line in file.readlines():
        line = line.split(",")

        if line[2] not in clean_names:
            continue

        retweet_names[line[2]] = line[1]

        l = sorted(clean_names[line[2]], key=lambda x: len(clean_names[x]), reverse=True) # sort users in neighborhood by their respective in_degreess in descending order
        l = l[:50] + [0]*(50-len(l)) # truncate / pad list to 50 elements

        curr_adj = []

        for user1 in l:
            user_adj = []

            for user2 in l:
                if (user1 == 0 or user2 ==0):
                    user_adj.append(0)
                elif (user1 == user2):
                    user_adj.append(0)
                else:
                    if user2 in clean_names[user1]:
                        user_adj.append(1)
                    else:
                        user_adj.append(0)
            
            curr_adj.append(np.array(user_adj, dtype=np.uint32))
        
        adj.append(np.array(curr_adj))
                    
        l = list(map(lambda x: id(x), l)) # express each username with unique id

        nbr.append(np.array(l))
        
    print("len retweet names", len(set(retweet_names.keys())))

nbr = np.array(nbr)
np.save("nbr.npy", nbr)

adj = np.array(adj)
np.save("adj.npy", adj)

print("nbr.npy")
arr = np.load("nbr.npy")
print(arr)
print(np.shape(arr))

print("adj.npy")
arr = np.load("adj.npy")
print(arr)
print(np.shape(arr))


